scalar JSON

type Layer {
    id: ID!
    title: String!
    visible: Boolean!
    current: Boolean!
    content: String!
}

type Sign {
    id: ID!
    title: String!
    troop: ID!
    signs: [Sign]
}

type Troop {
    id: ID!
    title: String!
    troops: [Troop]
}

input LayerInput {
    title: String!
    content: String!
}

input UpdateLayerInput {
    id: ID!
    content: String!
}

type Query {
    layers: [Layer],
    signs: [Sign],
    troops: [Troop],
}

type Mutation {
    addLayer (input: LayerInput!): Layer!
    deleteLayer (id: ID!): Layer!
    updateLayer (input: UpdateLayerInput!): Layer!
    changeCurrentLayer (id: ID!, value: Boolean!): [Layer]!
    changeLayerVisibility (id: ID!): Layer
}

type Subscription {
    layerAdded: Layer!
    layerDeleted: Layer!
}
